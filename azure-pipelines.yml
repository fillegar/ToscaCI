# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: Default

steps:
- task: CmdLine@1
  displayName: 'Run Tosca CI'
  inputs:
    filename: '"C:\Program Files (x86)\TRICENTIS\Tosca Testsuite\ToscaCommander\ToscaCI\Client\ToscaCIClient.exe"'
    arguments: '-m local -c "C:\Program Files (x86)\TRICENTIS\Tosca Testsuite\ToscaCommander\ToscaCI\Client\ADOPipelineLocal.xml" -t junit - r "C:\Tosca_Projects\ToscaCIResults\Results.xml"''     '

- task: PublishTestResults@1
  displayName: 'Publish Test Results C:\Tosca_Projects\ToscaCIResults'
  inputs:
    testResultsFiles: 'C:\Tosca_Projects\ToscaCIResults\Results.xml'

- powershell: |
   $url = 'https://pulse-7.qtestnet.com/webhook/476fb605-6d84-44cb-8512-2754d45aa0c9'
   
   $content = Get-Content "C:\Tosca_Projects\ToscaCIResults\Results.xml" -Raw
   $bytes = [System.Text.Encoding]::ASCII.GetBytes($content)
   $payload = [System.Convert]::ToBase64String($bytes)
   
   $body = @{
    'projectId' = '100714'
    'testcycle' = '2620424'
    'result' = $payload
   }
   
   [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
   Invoke-RestMethod -Body $body -Method 'Post' -Uri $url
  displayName: 'Upload Results to qTest Pulse'
